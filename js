"use strict"
// alert('hi, bro');
// let message,age=25,name="anton";
// message='Hello';
// alert(name);
// let admin,name;
// name="Джон";
// admin=name;
// alert(admin);

// ANCHOR Infinity - значение, которое больше любого числа
// NAN - означает вычислительную ошибку
//const bigInt =1232412434242353451235234523523541232n; добавляем n в конец, чтобы можо было записать число любой длины.
//``-в обратные ковычки можно добавлять переменные с помощью ${name},где name=Иван.
// alert(`Результат: ${1+2}`) ;
let check=4>1;//(boolean)Булевая функция, которая вернет только ДА или НЕТ(trur,false).
alert(check);//ПРОВЕРКА
//null- означает пусто, ничего или значение неизвестно
let x;//при вызове Х будет выдано undeffined
//number для любых чисел от +(-)2^53
// symbol -для уникальных индефикаторов
//object - для более сложных структур данных(Math-представялет мат. операции)
//typeof x / typeof(x) позволяет увидеть какой тип сохраенен в переменной(object, symbol, string, boolean и тд)
//в итоге существует 8 основных типов


// TODO Преобразование типов 01.08.2020 Урок 10!
